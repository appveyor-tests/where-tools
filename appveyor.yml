image: Visual Studio 2022

init:
- ps: |
    if ((Test-Path "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2019\Community") -or
     (Test-Path "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2019\Preview") -or
     (Test-Path "$env:ProgramFiles\Microsoft Visual Studio\2022\Community")) { $env:vs2019_2022 = 'true'; }
install:
#- ps: Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://gist.githubusercontent.com/OwenMcDonnell/fc2b9b38c8fe691b678e1f6e930b812e/raw/c98114aedbb196fe889017fea77b4cb9826b9cc5/install_dotnet_uninst_tool.ps1'))
#- ps: Remove-Item -LiteralPath "C:\Program Files\dotnet\sdk\9.0.100\" -Force -Recurse
- ps: |
    Invoke-WebRequest -Uri 'https://dot.net/v1/dotnet-install.ps1' -UseBasicParsing -OutFile "$env:temp\dotnet-install.ps1"
    & $env:temp\dotnet-install.ps1 -Architecture x64 -Version '8.0.400' -InstallDir "$env:ProgramFiles\dotnet"

- ps: dotnet --list-sdks
- ps: dotnet workload list
- ps: dotnet --version
- ps: dotnet workload --version
- ps: dotnet workload install wasm-tools --version 8.0.404
test_script:
#- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
#- ps: $env:path += ';C:\Program Files (x86)\dotnet-uninstall-tool\'
- ps: dotnet --list-sdks
#- ps: dotnet-core-uninstall list
#- ps: dotnet-core-uninstall remove 9.0.100 --sdk --x64 --yes --force --verbosity q

- ps: get-path
- where git
- where git-lfs
- where ssh
- where hg
- where svn
- where curl
- where node
- where npm
- where mvn
- where go
- where cmake
- where cpack
- where sqlpackage
- where sqlcmd
- where msbuild
- where vstest.console
- where 7z
- where dotnet
- where erl
- where git-lfs
- where java
- where clang
- where webpicmd
- where choco
- where python
- where pip
- where ruby
- where gem
- where bundle
- where nuget
- where xunit.console
- where chromedriver
- where perl
- where gitversion
- IF "%vs2019_2022%"=="" where mspec
- where nunit-console
- where nunit3-console
- npm install gulp -g
- where gulp
- where powershell
- where yarn
- where aws

build: off
